#!/usr/bin/python3

import requests
import urllib
import re
import os
from sys import argv, exit

def normalize_char(c):
    if c == ' ':
        return '_'
    elif re.match(r'(?u)[^-\w.]', c):
        return 'ï¿½'
    else:
        return c

def get_valid_filename(s):
    return "".join([normalize_char(c) for c in s])

def export_posts(posts: list[str]):
    for post in posts:
        text = requests.get(post).text

        imgs = re.findall('data-src="(/thumbnail/data.*\\.(jpg|png|gif))"', text)
        imgs = ["https://kemono.party" + img[0] for img in imgs]

        title = re.findall('<title>\n\s+&#34;(.*)&#34;.*\s*<\/title>', text)[0]

        vids = re.findall('href="(/data/.*\\.(mp4|mkv|mov|avi|wmv))"', text)
        vids = ["https://kemono.party" + vid[0] for vid in vids]

        print(f"-------- {title} --------")

        title = get_valid_filename(title)

        if len(imgs + vids) == 0:
            continue

        if not os.path.isdir(title):
            os.mkdir(title)

        for idx, url in enumerate(imgs + vids):
            print(url)
            ext = os.path.splitext(f"{url}")[-1]
            urllib.request.urlretrieve(url, f"{title}/{idx}{ext}")

def validate_type(ty: str):
    types = ["fanbox", "patreon", "gumroad", "subscribestar", "dlsite",
             "discord", "fantia", "boosty", "afdian"]

    if ty not in types:
        print(f"unknown website: {ty}")
        exit(1)

def export_user_by_id(id: int, ty: str):
    validate_type(ty)

    if not os.path.isdir(str(id)):
        os.mkdir(str(id))

    os.chdir(str(id))

    idx = 0
    posts = []
    while True:
        url = f"https://kemono.party/{ty}/user/{id}?o={idx}"
        text = requests.get(url).text
        homepage = re.findall(
            "<meta property=\"og:url\" content=\"https://kemono.party/artists\">",
            text
        )

        if homepage:
            print(f"page not found, id: {id}")
            exit(1)

        print(url)

        if re.findall("Nobody here but us chickens!", text):
            break

        posts.extend([f"https://kemono.party/{ty}/user/{id}/post/" + text for text in re.findall('/post/(.*)"', text)])

        idx+=50

    export_posts(posts)

if __name__ == "__main__":
    try:
        export_user_by_id(int(argv[1]), argv[2])
    except (IndexError, ValueError):
        print("format: ./parse id website (fanbox, patreon, etc..)")
        exit(1)
